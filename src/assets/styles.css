@layer reset, global, typedoc, layout, components;

:root {
  --space-xs: 0.125rem;
  --space-s: 0.25rem;
  --space-m: 0.5rem;
  --space-l: 0.75rem;
  --space-xl: 1rem;
  --space-xxl: 1.5rem;

  --radius: 0.5rem;
  --border-thin-size: 1px;
  --border-thick-size: 2px;
  --shadow: 0 0 6px -3px rgba(0, 0, 0, 0.5);

  /* palette */
  --green: #1ba673;
  --blue-dark: #003eaa;
  --blue-dark: #004ca3;
  --blue: #0060df;
  --blue-light: #3772cf;
  --purple: #8250df;
  --transparent-blue: #e0efff;
  --transparent-grey: #f3f4f6;
  --border-grey: #e5e7eb;
  --grey-light: #ededf0;
  --red: #d45656;
  --transparent-black: rgba(212,86,86,.125);
  /* --twoslash-tag-bg: rgba(55,114,207,.125); */
  --yellow: #c37d0d;
  --yellow-transparent: rgba(195,125,13,.125);
  --green: #1ba673;
  --green-transparent: rgba(27,166,115,.125);
  
  /* --color-ts-function: var(--dark-blue); */
  /* --color-link: var(--dark-blue); */
  /* --color-accent: var(--border-grey); */
  /* --color-ts-interface: var(--green); */

  /* --color-background: #fafafa; */
  --color-background: #fff;
  --color-text: #15141A;
  --color-text-light: #5B5B66;
  
  --color-background-secondary: var(--color-background);
  --color-text-aside: var(--color-text-light);
}

@layer reset {
  /* avoid clashes with code highlighters */
  :not(pre, code) {
    box-sizing: border-box;
    font: inherit;
    padding: 0;
    line-height: 1.25em;
    transition: transform 0.15s ease-in-out, background-color 0.15s ease-in-out, color 0.15s ease-in-out;
  }
  
  * {
    margin: 0;
  }
}

@layer global {
  body {
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-weight: 200;
    color: var(--color-text);
    background: var(--color-background);
  }
  [hidden][hidden][hidden] { display: none; }
  h1, h2, h3, h4, h5, h6 { font-weight: 300; }
  h1 { font-size: 1.625em; }
  h2 { font-size: 1.5em; }
  h3 { font-size: 1.325em; }
  h4 { font-size: 1.25em; }
  h5 { font-size: 1.125em; }
  small { font-size: 0.75em; }
  abbr { cursor: help; }

  select {
    user-select: none;
    cursor: pointer;
    background: var(--color-background);
    border: 1px solid var(--border-grey);
    border-radius: var(--radius);
    padding: var(--space-s) var(--space-m);
    color: var(--color-text);
  }

  input {
    background: var(--color-background);
    border: 1px solid var(--border-grey);
    padding: var(--space-xs) var(--space-m);
    border-radius: var(--radius);
  }

  :not(pre, code) > code {
    display: inline-block;
    border-radius: var(--radius);
    padding: 1px 4px;
    border: var(--border-thin-size) solid var(--border-grey);
    margin: 2px;
    box-sizing: border-box;
  }

  summary {
    user-select: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-s);
    margin-bottom: var(--space-m);

    &::marker { content: none; }
  }
  details .with-chevron {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-s);
  }
  details:not([open]) > summary .icon-chevron-down { transform: rotate(-90deg); }

  a {
    color: var(--blue);
    text-decoration: none;
    &:hover, &:focus {
      color: var(--blue-dark);
      text-decoration: underline;
    }
  }
  
  button {
    user-select: none;
    cursor: pointer;
    background: var(--color-background);
    border: var(--border-thick-size) solid var(--blue);
    color: var(--blue);
    border-radius: var(--radius);
    padding: var(--space-s) var(--space-m);
    font-weight: 300;
    &:hover, &:focus {
      border-color: var(--blue-dark);
      color: var(--blue-dark)
    }
    &:focus-visible {
      outline: 2px solid var(--blue-light);
      outline-offset: 2px;
    }
  }

  pre {
    position: relative;
    border: var(--border-thick-size) solid var(--border-grey);
    border-radius: var(--radius);
    overflow: clip;
    
    & code {
      display: block;
      padding: var(--space-m);
      max-inline-size: 100%;
      overflow-x: auto;
      scrollbar-width: thin;
    }
    & button {
      position: absolute;
      top: 4px;
      right: 4px;
    }
  }
}

@layer layout {
  .page-layout {
    min-block-size: 83dvb;
    display: grid;
    grid-template-areas: "aside-left main aside-right";
    grid-template-columns: 25% 50% 25%;

    & > * { padding: var(--space-l); }
    & .site-nav { grid-area: aside-left; }
    & .page-content-nav { grid-area: aside-right; }
    & .page-content { grid-area: main; }
  }

  /* header */
  .page-header {
    min-block-size: 3rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--space-m);
    padding: 0 var(--space-m);
    border-block-end: var(--border-thin-size) solid var(--border-grey);

    & .header-logo {
      color: inherit;
      text-decoration: none;
    }
  
    & .header-content {
      display: flex;
      align-items: center;
      gap: var(--space-m);
    }
  
    & .site-nav-burger-trigger { display: none; }
  
    & .header-nav-links a {
      display: inline-block;
      padding: var(--space-m);
    }
  }

  @media (width < 600px) {
    /* Idk yet. */
    .page-header .site-nav-burger-trigger {
      display: flex;
      align-items: center;
    }
    .page-layout {
      grid-template-areas:
        'main aside-right'
        'main aside-left';
      grid-template-columns: 100dvi min-content;
      max-inline-size: 100dvi;
      overflow-x: clip;
    }
  }
}

@layer components {
  :where(.page-content :not(.page-content-header)) {
    ul, ol { padding-inline-start: 1em; }
    ul { list-style: disc; }
  }
}

@layer components {
  .dropdown {
    overflow: visible;
    position: relative;
    z-index: 1;

    &:not(:focus-within) .dropdown-overlay { display: none; }
  }
  :where(.dropdown .dropdown-overlay) {
    z-index: 10;
    position: absolute;
    top: calc(100% + var(--space-l));
    left: 50%;
    transform: translateX(-50%);
    max-inline-size: 15rem;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    background: var(--color-background);
  }
}

@layer components {
  .settings-overlay {
    padding: var(--space-m);
    left: unset;
    right: 0;
    transform: unset;
    inline-size: 15rem;
    display: flex;
    flex-direction: column;
    gap: var(--space-m);
  }
  .theme-control {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-s);
  }
}

/* navigation */
@layer components {  
  .project-nav {
    display: flex;
    flex-direction: column;
    gap: var(--space-m);
  }
  
  .nav-tree {
    padding-inline-start: 0.5em;
    display: flex;
    flex-direction: column;
    list-style-type: none;
    gap: var(--space-xs);
  }

  .nav-accordion > .nav-tree {
    position: relative;

    &::before {
      --spacer: var(--space-s);
      content: "";
      height: calc(100% - var(--spacer) * 2);
      width: 1px;
      background: var(--border-grey);
      position: absolute;
      left: 0.125em;
      top: var(--spacer);
      z-index: 1;
    }
  }
    
  .nav-leaf {
    display: flex;
    gap: var(--space-s);
    align-items: center;
    padding: var(--space-xs) var(--space-m);
  }

  a.nav-leaf {
    color: var(--color-text-light);
    border-radius: var(--radius);
    text-decoration: none;

    &:hover {
      background: var(--transparent-grey);
      color: var(--color-text);
    }
    &.is-active {
      background-color: var(--transparent-blue);
      color: var(--blue-dark);
    }
  }
  
  .nav-accordion {
    &::marker { display: none; }

    & summary {
      cursor: pointer;
      user-select: none;
      display: flex;
      gap: var(--space-m);
      align-items: center;
      justify-content: space-between;
      margin-bottom: var(--space-s);
    }

    &:not([open]) summary .icon-chevron-down {
      transform: rotate(-90deg);
    }
  }
}

/* page-nav specificities */
@layer components {
  .page-nav {
    display: flex;
    flex-direction: column;
    gap: var(--space-m);

    /* & .nav-tree {
      padding-inline-start: 0;
    } */
  }
}

@layer components {
  .page-footer {
    border-block-start: var(--border-thin-size) solid var(--border-grey);
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-l);
  }
}

@layer components {
  .page-content-header {
    display: flex;
    flex-direction: column;
    gap: var(--space-m);
  }
}

@layer {
  .breadcrumb {
    display: flex;
    align-items: center;
    list-style: none;
    margin-inline-start: calc(-1 * var(--space-m));
    & li > * {
      display: inline-block;
      padding: var(--space-s) var(--space-m);
    }
    & a {
      border-radius: var(--radius);
      text-decoration: none;
      color: var(--color-text-light);
      &:hover {
        color: var(--color-text);
        background: var(--transparent-grey);
      }
    }
  }
}

@layer components {
  .markdown, .page-content {
    display: flex;
    flex-direction: column;
    gap: var(--space-l);

    & section {
      display: flex;
      flex-direction: column;
      gap: var(--space-m);
    }
  }
}

@layer components {
  .member-summary-name {
    display: flex;
    align-items: center;
    gap: var(--space-s);
  }
  .anchor-icon {
    display: inline-flex;
    color: var(--color-text);
    vertical-align: middle;
  }
  abbr.kind-icon {
    font-family: 'Courier New', Courier, monospace;
  }
}

@layer components {
  ul.signatures {
    list-style: none;
  }

  .signature {
    & .anchor-icon { margin-inline-start: var(--space-s); }
  }

  .signatures, .signature, .signature-body, .signature-body > div {
    display: flex;
    flex-direction: column;
    gap: var(--space-m);
  }
}

@layer components {
  ul:is(.parameter-list, .tsd-type-parameter-list) {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: var(--space-m);

    & li {
      display: flex;
      flex-direction: column;
      gap: var(--space-s);
    }
  }
}

@layer typedoc {
  .tsd-anchor-link {
    display: flex;
    align-items: center;
    gap: var(--space-m);

    &:hover .tsd-anchor-icon { display: flex; }
  }
  .tsd-anchor-icon {
    display: none;
    color: var(--color-text);
  }

  .tsd-tag-example {
    display: flex;
    flex-direction: column;
    gap: var(--space-s)
  }

  .tsd-tag {
    font-size: 0.75em;
    padding-block: var(--space-s);
    line-height: 1;
  }
}

/* Test page: module.html */
@layer typedoc {
  /* .tsd-kind-icon { display: none; } */
  .tsd-accordion-summary :is(h2, h3, h4, h5) {
    flex: 1;
    display: flex;
    align-items: center;
    flex-direction: row-reverse;
    justify-content: space-between;
  }
}

@layer typedoc {
  .tsd-alert {
    --alert-color: unset;

    padding: var(--space-s);
    padding-inline-start: var(--space-l);
    border: none;
    position: relative;
    display: flex;
    flex-direction: column;
    gap: var(--space-m);

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      inline-size: var(--border-thick-size);
      border-radius: var(--radius);
      background: var(--alert-color);
    }

    & .tsd-alert-title {
      color: var(--alert-color);
      font-weight: 300;
      display: flex;
      align-items: center;
      gap: var(--space-m);
      
      & svg {
        fill: var(--alert-color);
      }
    }

    &.tsd-alert-note { --alert-color: var(--blue); }
    &.tsd-alert-tip { --alert-color: var(--green); }
    &.tsd-alert-important { --alert-color: var(--purple); }
    &.tsd-alert-warning { --alert-color: var(--yellow); }
    &.tsd-alert-caution { --alert-color: var(--red); }
  }
}

@layer typedoc {
  .tsd-kind-call-signature { color: var(--purple); }
  .tsd-kind-parameter { color: var(--blue); }
  .tsd-kind-interface { color: var(--green); }
  .tsd-kind-property, .tsd-kind-type-parameter { color: var(--yellow); }
  .tsd-signature-type { font-style: italic; }
}
